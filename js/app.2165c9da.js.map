{"version":3,"file":"js/app.2165c9da.js","mappings":"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","sources":["webpack://demo/./src/App.vue","webpack://demo/./src/components/Display.vue","webpack://demo/./src/components/Display.vue?d54f","webpack://demo/./src/App.vue?7ccd","webpack://demo/./src/main.js","webpack://demo/webpack/bootstrap","webpack://demo/webpack/runtime/amd define","webpack://demo/webpack/runtime/amd options","webpack://demo/webpack/runtime/chunk loaded","webpack://demo/webpack/runtime/compat get default export","webpack://demo/webpack/runtime/define property getters","webpack://demo/webpack/runtime/global","webpack://demo/webpack/runtime/hasOwnProperty shorthand","webpack://demo/webpack/runtime/make namespace object","webpack://demo/webpack/runtime/node module decorator","webpack://demo/webpack/runtime/jsonp chunk loading","webpack://demo/webpack/startup"],"sourcesContent":["<!--\n * @Description: \n * @Author: zhuyc9\n * @Date: 2022-11-02 21:00:42\n * @LastEditTime: 2022-11-02 21:31:32\n * @LastEditors: zhuyc9\n * @Reference: \n-->\n<template>\n  <div id=\"root\">\n    <Display/>\n  </div>\n</template>\n\n<script>\nimport Display from './components/Display'\n\nexport default {\n  name: 'App',\n  components: {\n    Display\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n","<!--\r\n * @Description: \r\n * @Author: zhuyc9\r\n * @Date: 2022-11-02 21:04:42\r\n * @LastEditTime: 2022-11-02 22:04:52\r\n * @LastEditors: zhuyc9\r\n * @Reference: \r\n-->\r\n<template>\r\n    <div id=\"display\">\r\n        <div>\r\n            <button @click=\"addSphere\">Add SphereWidget</button>\r\n            <!-- <button @click=\"showR\">显示半径</button> -->\r\n            <button @click=\"addLine\">Add LineWidget</button>\r\n            <button @click=\"addMonitor\">Add FPSMonitor</button>\r\n            <button @click=\"removeSphere\">Remove Widget</button>\r\n            <br>\r\n            Set Resolution:<input type=\"number\" name=\"adjust\" id=\"adjust\" v-model=\"resolution\">\r\n            Polys in Scene:{{ numberOfPolys }}\r\n        </div>\r\n        <div ref=\"vtkContainer\" style=\"width: 100%; height: 600px;\"/>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import {ref, onMounted, watch} from 'vue';\r\n    import '@kitware/vtk.js/favicon';\r\n\r\n    // Load the rendering pieces we want to use (for both WebGL and WebGPU)\r\n    import '@kitware/vtk.js/Rendering/Profiles/Geometry';\r\n    import '@kitware/vtk.js/Rendering/Profiles/Glyph';\r\n\r\n    import vtkActor from '@kitware/vtk.js/Rendering/Core/Actor';\r\n    import vtkCubeSource from '@kitware/vtk.js/Filters/Sources/CubeSource';\r\n    import vtkSphereSource from '@kitware/vtk.js/Filters/Sources/SphereSource';\r\n    import vtkFullScreenRenderWindow from '@kitware/vtk.js/Rendering/Misc/FullScreenRenderWindow';\r\n    import vtkGenericRenderWindow from '@kitware/vtk.js/Rendering/Misc/GenericRenderWindow';\r\n    import vtkMapper from '@kitware/vtk.js/Rendering/Core/Mapper';\r\n    // import vtkSphereWidget from '../reDesignVTK/Widgets/Widgets3D/SphereWidget';\r\n    import vtkSphereWidget from '@kitware/vtk.js/Widgets/Widgets3D/SphereWidget';\r\n    // import vtkLineWidget from '../reDesignVTK/Widgets/Widgets3D/LineWidget'\r\n    import vtkLineWidget from '@kitware/vtk.js/Widgets/Widgets3D/LineWidget'\r\n    // import vtkWidgetManager from '../reDesignVTK/Widgets/Core/WidgetManager';\r\n    import vtkWidgetManager from '@kitware/vtk.js/Widgets/Core/WidgetManager';\r\n    import WidgetManagerConstants from '@kitware/vtk.js/Widgets/Core/WidgetManager/Constants';\r\n    import vtkFPSMonitor from '@kitware/vtk.js/Interaction/UI/FPSMonitor';\r\n    // import controlPanel from './controlPanel.html';\r\n\r\n    export default{\r\n        name:'Display',\r\n        setup(){\r\n            const vtkContainer = ref(null);\r\n            let index = ref();\r\n            let vtkContext = null;\r\n            let widgetManager = null;\r\n            let cube;\r\n            let widget = null;\r\n            let widgetHandle = null;\r\n            let renderer;\r\n            let renderWindow;\r\n            let resolution = ref(300);\r\n            let numberOfPolys = ref(0);\r\n\r\n            const { CaptureOn } = WidgetManagerConstants;\r\n\r\n            const WIDGET_BUILDERS = {\r\n                Box(widgetManager) {\r\n                    return widgetManager.addWidget(vtkBoxWidget.newInstance({ label: 'Box' }));\r\n                },\r\n                PlaneWidget(widgetManager) {\r\n                    return widgetManager.addWidget(\r\n                    vtkImplicitPlaneWidget.newInstance({ label: 'Plane' })\r\n                    );\r\n                },\r\n                PolyLine(widgetManager) {\r\n                    const instance = widgetManager.addWidget(\r\n                    vtkPolyLineWidget.newInstance({\r\n                        label: 'Polyline',\r\n                    })\r\n                    );\r\n                    instance.setCoincidentTopologyParameters({\r\n                    Point: {\r\n                        factor: -1.0,\r\n                        offset: -1.0,\r\n                    },\r\n                    Line: {\r\n                        factor: -1.5,\r\n                        offset: -1.5,\r\n                    },\r\n                    Polygon: {\r\n                        factor: -2.0,\r\n                        offset: -2.0,\r\n                    },\r\n                    });\r\n                    instance.setActiveScaleFactor(0.9);\r\n                    instance.setGlyphResolution(60);\r\n                    return instance;\r\n                },\r\n                ClosedPolyLine(widgetManager) {\r\n                    const instance = widgetManager.addWidget(\r\n                    vtkPolyLineWidget.newInstance({\r\n                        label: 'Closed Polyline',\r\n                    }),\r\n                    null,\r\n                    {\r\n                        coincidentTopologyParameters: {\r\n                        Point: {\r\n                            factor: -1.0,\r\n                            offset: -1.0,\r\n                        },\r\n                        Line: {\r\n                            factor: -1.5,\r\n                            offset: -1.5,\r\n                        },\r\n                        Polygon: {\r\n                            factor: -2.0,\r\n                            offset: -2.0,\r\n                        },\r\n                        },\r\n                    }\r\n                    );\r\n                    instance.setActiveScaleFactor(1.1);\r\n                    instance.setGlyphResolution(30);\r\n                    instance.setClosePolyLine(true);\r\n                    return instance;\r\n                },\r\n            };\r\n\r\n\r\n            onMounted(()=>{\r\n                const fullScreenRenderer = vtkGenericRenderWindow.newInstance({\r\n                    background: [0.9, 0.9, 0.9],\r\n                });\r\n                fullScreenRenderer.setContainer(vtkContainer.value);\r\n                fullScreenRenderer.resize()\r\n                renderer = fullScreenRenderer.getRenderer();\r\n                renderWindow = fullScreenRenderer.getRenderWindow();\r\n\r\n                // cube = vtkCubeSource.newInstance();\r\n                cube = vtkSphereSource.newInstance({\r\n                    radius: 1.0,\r\n                    phiResolution: resolution.value,\r\n                    thetaResolution: resolution.value,\r\n                });\r\n                const polyData = cube.getOutputData();\r\n                numberOfPolys.value = polyData.getNumberOfPolys();\r\n                console.log(`Number of polygons: ${numberOfPolys.value}`);\r\n                const mapper = vtkMapper.newInstance();\r\n                const actor = vtkActor.newInstance();\r\n\r\n                actor.setMapper(mapper);\r\n                mapper.setInputConnection(cube.getOutputPort());\r\n                actor.getProperty().setOpacity(0.2);\r\n\r\n                renderer.addActor(actor);\r\n\r\n                // ----------------------------------------------------------------------------\r\n                // Widget manager\r\n                // ----------------------------------------------------------------------------\r\n\r\n                widgetManager = vtkWidgetManager.newInstance();\r\n                widgetManager.setRenderer(renderer);\r\n\r\n                \r\n\r\n                renderer.resetCamera();\r\n                // widgetManager.releaseFocus(widget);\r\n                // widget = vtkSphereWidget.newInstance();\r\n                // widget.placeWidget(cube.getOutputData().getBounds());\r\n                // widgetHandle = widgetManager.addWidget(widget);\r\n                // widgetManager.grabFocus(widget);\r\n\r\n            })\r\n\r\n            watch(resolution, (newVal, oldVal) => {\r\n               cube.setPhiResolution(newVal)\r\n               cube.setThetaResolution(newVal)\r\n               numberOfPolys.value = cube.getOutputData().getNumberOfPolys()\r\n            });\r\n\r\n            function addSphere(){\r\n                // widgetManager.releaseFocus(widget);\r\n                // widget = vtkSphereWidget.newInstance({\r\n                    // dependingPoints: [2,2,2,1,1,1],\r\n                // });\r\n                // widget.placeWidget(cube.getOutputData().getBounds());\r\n                // widget.setPlaceFactor(0);\r\n                // widgetManager.enablePicking();\r\n                // widgetHandle = widgetManager.addWidget(widget);\r\n                // widgetHandle.setCenterAndRadius([0,0,0], 0)\r\n                // widgetHandle.getWidgetState().getBorderHandle().setVisible(false)\r\n                // console.log(widgetHandle.getWidgetState().getLeftCenterHandle())\r\n\r\n                // widgetManager.grabFocus(widget);\r\n\r\n                widgetManager.releaseFocus(widget);\r\n                widget = vtkSphereWidget.newInstance();\r\n                widget.placeWidget(cube.getOutputData().getBounds());\r\n                widgetHandle = widgetManager.addWidget(widget);\r\n                widgetManager.grabFocus(widget);\r\n            }\r\n\r\n            function removeSphere(){\r\n                if(widgetManager.getWidgets()[0]){\r\n                    var number = widgetManager.getWidgets().length;\r\n                    widgetManager.removeWidget(widgetManager.getWidgets()[number-1])\r\n                }\r\n            }\r\n\r\n            function addLine(){\r\n                widgetManager.releaseFocus(widget);\r\n                widget = vtkLineWidget.newInstance({\r\n                    // dependingPoints: [2,2,2,1,1,1],\r\n                });\r\n                // widget.placeWidget(cube.getOutputData().getBounds());\r\n                // widget.setPlaceFactor(0);\r\n                // widgetManager.enablePicking();\r\n                widgetHandle = widgetManager.addWidget(widget);\r\n                // widgetHandle.placeHandleByCoords([-0.1,0,0],[0.1,0,0])\r\n                // widgetHandle.getWidgetState().getHandle1().setOrigin([-1,0,0])\r\n                // widgetHandle.getWidgetState().getHandle2().setOrigin([1,0,0])\r\n                // widgetHandle.getWidgetState().getBorderHandle().setVisible(false)\r\n                // console.log(widgetHandle.getWidgetState().getLeftCenterHandle())\r\n\r\n                widgetManager.grabFocus(widget);\r\n            }\r\n\r\n            function showR(){\r\n                widgetHandle.setVisibility(!widgetHandle.getVisibility())\r\n            }\r\n\r\n            function addMonitor(){\r\n                const fpsMonitor = vtkFPSMonitor.newInstance();\r\n                fpsMonitor.setContainer(vtkContainer.value);\r\n                fpsMonitor.setRenderWindow(renderWindow);\r\n            }\r\n\r\n            return {\r\n                vtkContainer,\r\n                addSphere,\r\n                showR,\r\n                addLine,\r\n                addMonitor,\r\n                removeSphere,\r\n                resolution,\r\n                numberOfPolys\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style>\r\n    .left {\r\n  float: left;\r\n}\r\n</style>","import { render } from \"./Display.vue?vue&type=template&id=b5522602\"\nimport script from \"./Display.vue?vue&type=script&lang=js\"\nexport * from \"./Display.vue?vue&type=script&lang=js\"\n\nimport \"./Display.vue?vue&type=style&index=0&id=b5522602&lang=css\"\n\nimport exportComponent from \"D:\\\\Project_Code\\\\teethsite\\\\WidgetManager\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=353ce762\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=353ce762&lang=css\"\n\nimport exportComponent from \"D:\\\\Project_Code\\\\teethsite\\\\WidgetManager\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/*\n * @Description: \n * @Author: zhuyc9\n * @Date: 2022-11-02 21:00:42\n * @LastEditTime: 2022-11-02 21:02:50\n * @LastEditors: zhuyc9\n * @Reference: \n */\nimport { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\napp.use(ElementPlus)\napp.mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdD = function () {\n\tthrow new Error('define cannot be used indirect');\n};","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkdemo\"] = self[\"webpackChunkdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(6371); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["id","_createElementBlock","_hoisted_1","_createVNode","_component_Display","_createElementVNode","ref","style","onClick","$setup","_hoisted_2","type","name","_hoisted_3","setup","vtkContainer","cube","renderer","renderWindow","widgetManager","widget","widgetHandle","resolution","numberOfPolys","CaptureOn","WidgetManagerConstants","addSphere","releaseFocus","vtkSphereWidget","placeWidget","getOutputData","getBounds","addWidget","grabFocus","removeSphere","getWidgets","number","length","removeWidget","addLine","vtkLineWidget","showR","setVisibility","getVisibility","addMonitor","fpsMonitor","vtkFPSMonitor","setContainer","value","setRenderWindow","onMounted","fullScreenRenderer","vtkGenericRenderWindow","background","resize","getRenderer","getRenderWindow","vtkSphereSource","radius","phiResolution","thetaResolution","polyData","getNumberOfPolys","console","log","mapper","vtkMapper","actor","vtkActor","setMapper","setInputConnection","getOutputPort","getProperty","setOpacity","addActor","vtkWidgetManager","setRenderer","resetCamera","watch","newVal","oldVal","setPhiResolution","setThetaResolution","__exports__","components","Display","render","app","createApp","App","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","loaded","__webpack_modules__","call","m","amdD","Error","amdO","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}